server.port=8006
# Database Settings
spring.datasource.url=jdbc:postgresql://localhost:5432/notification_service_db

spring.datasource.username= postgres
spring.datasource.password= postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
# Allows for auto creation of tables
spring.jpa.hibernate.ddl-auto = update

# when using @Slf4j, you need to add the following to show the logs in the terminal
logging.level.com=INFO

# Consumer configuration
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.auto-offset-reset: earliest

# Chat and Message message deserialization configuration
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.application.name=notification-service
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.client.instance.preferIpAddress = true
spring.kafka.consumer.group-id=chatEventGroupForChat
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=chat:com.maitsev.notificationservice.model.Chat, message:com.maitsev.notificationservice.model.Message, review:com.maitsev.notificationservice.model.Review

